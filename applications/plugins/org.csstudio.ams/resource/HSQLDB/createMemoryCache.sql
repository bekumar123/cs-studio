-- SQL-Skript zum Erzeugen der AMS-Datenbank in HSQLDB (In-Memory)
-- Aktuelle Version vom 21.10.2013
-- Änderungen von C1-WPS

CREATE TABLE AMS_FilterCond_FilterCond 
(
   iFilterConditionId INT NOT NULL,
   iFilterConditionRef INT NOT NULL
);

CREATE TABLE AMS_FilterCond_Negation 
(
   iFilterConditionRef INT NOT NULL,
   iNegatedFCRef INT NOT NULL
);

CREATE TABLE AMS_User 
(
    iUserId INT NOT NULL, 
    iGroupRef INT DEFAULT -1 NOT NULL, 
    cUserName VARCHAR(128), 
    cEmail VARCHAR(128), 
    CMOBILEPHONE VARCHAR(64), 
    CPHONE VARCHAR(64), 
    CSTATUSCODE VARCHAR(32), 
    CCONFIRMCODE VARCHAR(32), 
    SACTIVE SMALLINT, 
    SPREFERREDALARMINGTYPERR SMALLINT, 
    PRIMARY KEY (iUserId)
);

CREATE TABLE AMS_UserGroup 
(
    IUSERGROUPID INT NOT NULL, 
    iGroupRef INT DEFAULT -1 NOT NULL, 
    CUSERGROUPNAME VARCHAR(128), 
    SMINGROUPMEMBER SMALLINT, 
    ITIMEOUTSEC INT, 
    SACTIVE SMALLINT, 
    PRIMARY KEY (IUSERGROUPID)
);

CREATE TABLE AMS_UserGroup_User 
(
    IUSERGROUPREF INT NOT NULL, 
    IUSERREF INT NOT NULL, 
    IPOS INT NOT NULL, 
    SACTIVE SMALLINT, 
    CACTIVEREASON VARCHAR(128), 
    TTIMECHANGE BIGINT, 
    PRIMARY KEY (IUSERGROUPREF, IUSERREF)
);

CREATE TABLE AMS_FilterConditionType 
(
    IFILTERCONDITIONTYPEID INT, 
    CNAME VARCHAR(128), 
    CCLASS VARCHAR(256), 
    CCLASSUI VARCHAR(256), 
    PRIMARY KEY (IFILTERCONDITIONTYPEID)
);

CREATE TABLE AMS_FilterCondition 
(
    IFILTERCONDITIONID INT NOT NULL, 
    IGROUPREF INT DEFAULT -1 NOT NULL, 
    CNAME VARCHAR(128), 
    CDESC VARCHAR(256), 
    IFILTERCONDITIONTYPEREF INT, 
    PRIMARY KEY (IFILTERCONDITIONID)
);

CREATE TABLE AMS_FilterCond_Junction
(
   iFilterConditionRef INT NOT NULL,
   operator VARCHAR(3) NOT NULL
);

CREATE TABLE AMS_FilterCondition_String 
(   
    IFILTERCONDITIONREF INT NOT NULL, 
    CKEYVALUE VARCHAR(16), 
    SOPERATOR SMALLINT, 
    CCOMPVALUE VARCHAR(128)
);

CREATE TABLE AMS_FilterCond_ArrStr 
(
    IFILTERCONDITIONREF INT NOT NULL, 
    CKEYVALUE VARCHAR(16), 
    SOPERATOR SMALLINT
);

CREATE TABLE AMS_FilterCond_ArrStrVal 
(   
    IFILTERCONDITIONREF INT NOT NULL, 
    CCOMPVALUE VARCHAR(128)
);

CREATE TABLE AMS_FilterCond_TimeBased 
(   
    IFILTERCONDITIONREF INT NOT NULL, 
    CSTARTKEYVALUE VARCHAR(16), 
    SSTARTOPERATOR SMALLINT, 
    CSTARTCOMPVALUE VARCHAR(128), 
    CCONFIRMKEYVALUE VARCHAR(16), 
    SCONFIRMOPERATOR SMALLINT, 
    CCONFIRMCOMPVALUE VARCHAR(128), 
    STIMEPERIOD SMALLINT, 
    STIMEBEHAVIOR SMALLINT
);

CREATE TABLE AMS_FilterCond_TimeBasedItems
(
    iItemID         INT,
    iFilterConditionRef INT NOT NULL,
    iFilterRef      INT NOT NULL,
    cIdentifier     VARCHAR(128) NOT NULL,
    sState          SMALLINT,
    tStartTime      BIGINT,
    tEndTime        BIGINT,
    sTimeOutAction  SMALLINT,
    iMessageRef     INT,
    PRIMARY KEY(iItemID)
);

CREATE TABLE AMS_FilterCondition_PV 
(
    IFILTERCONDITIONREF INT NOT NULL, 
    CPVCHANNELNAME VARCHAR(128), 
    SSUGGESTEDPVTYPEID SMALLINT, 
    SOPERATORID SMALLINT, 
    CCOMPVALUE VARCHAR(128)
);

CREATE TABLE AMS_FilterCond_Conj_Common 
(
    IFILTERCONDITIONREF INT NOT NULL, 
    IFIRSTFILTERCONDITIONREF INT NOT NULL, 
    ISECONDFILTERCONDITIONREF INT NOT NULL, 
    IOPERAND SMALLINT
);

CREATE TABLE AMS_Filter 
(
    IFILTERID INT, 
    IGROUPREF INT DEFAULT -1 NOT NULL, 
    CNAME VARCHAR(128), 
    CDEFAULTMESSAGE VARCHAR(1024), 
    CFILTERTYPE VARCHAR(100) DEFAULT 'default' NOT NULL, 
    PRIMARY KEY (IFILTERID)
);

CREATE TABLE AMS_Filter_Timebased 
(
    IFILTERREF INT NOT NULL, 
    ITIMEOUT INT NOT NULL, 
    ISTARTFILTERCONDITIONREF INT DEFAULT -1 NOT NULL, 
    ISTOPFILTERCONDITIONREF INT DEFAULT -1 NOT NULL, 
    ISENDONTIMEOUT INT DEFAULT 1 NOT NULL, 
    PRIMARY KEY (IFILTERREF)
);

CREATE TABLE AMS_Filter_Watchdog 
(
    IFILTERREF INT NOT NULL, 
    ITIMEOUT INT NOT NULL, 
    IFILTERCONDITIONREF INT DEFAULT -1 NOT NULL, 
    PRIMARY KEY (IFILTERREF)
);

CREATE TABLE AMS_Filter_FilterCondition 
(
    IFILTERREF INT, 
    IFILTERCONDITIONREF INT, 
    IPOS INT, 
    PRIMARY KEY (IFILTERREF, IFILTERCONDITIONREF)
);

CREATE TABLE AMS_TbFilter_FilterCond
(
    iFilterRef INT NOT NULL,
    iFilterConditionRef INT NOT NULL,
    iTimebasedCondType INT NOT NULL
);

CREATE TABLE AMS_Topic 
(
    ITOPICID INT NOT NULL, 
    IGROUPREF INT DEFAULT -1 NOT NULL, 
    CTOPICNAME VARCHAR(128), 
    CNAME VARCHAR(128), 
    CDESCRIPTION VARCHAR(256), 
    PRIMARY KEY (ITOPICID)
);

CREATE TABLE AMS_FilterActionType 
(
    IFILTERACTIONTYPEID INT NOT NULL, 
    CNAME VARCHAR(128), 
    ITOPICREF INT, 
    PRIMARY KEY (IFILTERACTIONTYPEID)
);

CREATE TABLE AMS_FilterAction 
(
    IFILTERACTIONID INT NOT NULL, 
    IFILTERACTIONTYPEREF INT NOT NULL, 
    IRECEIVERREF INT, 
    CMESSAGE VARCHAR(1024), 
    PRIMARY KEY (IFILTERACTIONID)
);

CREATE TABLE AMS_Filter_FilterAction 
(
    IFILTERREF INT NOT NULL, 
    IFILTERACTIONREF INT NOT NULL, 
    IPOS INT NOT NULL
);

CREATE TABLE AMS_FilterCond_PropCompare 
(
    IFILTERCONDITIONREF INT NOT NULL, 
    CMESSAGEKEYVALUE VARCHAR(16) NOT NULL, 
    SOPERATOR INT, 
    PRIMARY KEY (IFILTERCONDITIONREF)
);

CREATE TABLE AMS_Message
(
    iMessageID      INT NOT NULL,
    cProperty       VARCHAR(16),
    cValue          VARCHAR(256)
);

CREATE TABLE AMS_MessageChain
(
    iMessageChainID     INT NOT NULL,
    iMessageRef         INT NOT NULL,
    iFilterRef          INT NOT NULL,
    iFilterActionRef    INT NOT NULL,
    iReceiverPos        INT NOT NULL,
    tSendTime           BIGINT,
    tNextActTime        BIGINT,
    sChainState         SMALLINT,   
    cReceiverAdress     VARCHAR(64),    
    PRIMARY KEY(iMessageChainID)
);

CREATE TABLE AMS_History
(
    iHistoryID      INT NOT NULL,
    tTimeNew        BIGINT,
    cType           VARCHAR(16),
    cMsgHost        VARCHAR(64),
    cMsgProc        VARCHAR(64),
    cMsgName        VARCHAR(64),
    cMsgEventTime   VARCHAR(32),
    cDescription    VARCHAR(512),
    cActionType     VARCHAR(16),    
    iGroupRef       INT,
    cGroupName      VARCHAR(64),
    iReceiverPos    INT,
    iUserRef        INT,
    cUserName       VARCHAR(128),
    cDestType       VARCHAR(16),    
    cDestAdress     VARCHAR(128),
    PRIMARY KEY(iHistoryID)
);

CREATE TABLE AMS_Flag 
(
    CFLAGNAME VARCHAR(32) NOT NULL, 
    SFLAGVALUE SMALLINT NOT NULL, 
    PRIMARY KEY (CFLAGNAME)
);
