<project name="css.hudson.build" default="build">
	<property file="build.properties" />
	<property file="tools.properties" />
	

	<target name="build" depends="copyPlugins, buildWindows, buildLinux"/> <!--copyPlugins, pdeBuild, checkBuildFilePresent, updateConfiguration, hudsonUpdate"/>
-->	
	<target name="buildWindows" depends="cleanup, pdeBuildWin, updateConfigWin, hudsonUpdateWin"/>
	<target name="buildLinux" depends="cleanup, pdeBuildLin, updateConfigLin, hudsonUpdateLin"/>
	<!--
		Debug output
	-->
	<!--
	<echo message="'workspaceLocation: ${workspaceLocation}"/>
	<echo message="'e360TP: ${e360TP}"/>
	<echo message="'buildDirectory: ${buildDirectory}"/>
	<echo message="'hudsonbase: ${hudsonbase}"/>
	<echo message="'base: ${base}"/>
	<echo message="'tstamp: ${tstamp}"/>
	<echo message="'hudsonjob: ${hudsonjob}"/>
	<echo message="'BaseLocation: ${baseLocation}"/>
	<echo message="'buckminsterLocation: ${buckminsterLocation}"/>
	<echo message="'buckminsterVersion: ${buckminsterEquinoxLauncherPluginVersion}"/>
	<echo message="'buckminsterCquery: ${buckminsterCquery}"/>
    <echo message="${e360TP}/plugins/org.eclipse.equinox.launcher_1.1.0.v20100507.jar" />
	-->
	
	<!--
	 Delete previous build directory and copy plugins from mercurial in
	 the empty build directory.
	-->
	<target name="copyPlugins">
		<delete dir="${workspaceLocation}/build" />
		<mkdir dir="${workspaceLocation}/build" />
		<copy todir="${workspaceLocation}/build">
			<fileset dir="${workspaceLocation}/core"/>
		</copy>
		<copy todir="${workspaceLocation}/build">
			<fileset dir="${workspaceLocation}/applications"/>
		</copy>
		<copy todir="${workspaceLocation}/build/features">
			<fileset dir="${workspaceLocation}/products/DESY/features"/>
		</copy>
		<copy todir="${workspaceLocation}/build/plugins">
			<fileset dir="${workspaceLocation}/products/DESY/plugins"/>
		</copy>
		<copy todir="${workspaceLocation}/build/plugins">
			<fileset dir="${workspaceLocation}/products/DESY/products"/>
		</copy>
		<copy todir="${workspaceLocation}/build">
			<fileset dir="${workspaceLocation}/products/DESY/DESY-CSS"/>
		</copy>
		<copy todir="${workspaceLocation}/build/plugins">
			<fileset dir="${workspaceLocation}/products/NSLS2/plugins"/>
		</copy>
<!--		<copy todir="${workspaceLocation}/build">
			<fileset dir="D:/Java/hudson/EclipseTargetPlatform/e360"/>
		</copy>
	--></target>
		
	
	
	<!--
	Headless Eclipse Build.
	-->
	<target name="cleanup">
		<delete file="${workspaceLocation}/build/*.xml"/>	
		<delete file="${workspaceLocation}/build/*.properties"/>	
		<delete file="${workspaceLocation}/build/*.sh"/>	
		<delete file="${workspaceLocation}/build/secure_storage"/>	
		<delete dir="${workspaceLocation}/build/I.CSSHead_"/>	
		<delete dir="${workspaceLocation}/build/initmp"/>	
	</target>
			
	<!--
	Headless Eclipse Build for Windows
	-->
	<target name="pdeBuildWin">
		<java classname="org.eclipse.equinox.launcher.Main" fork="true" failonerror="true">			
			<arg value="-application" />
			<arg value="org.eclipse.ant.core.antRunner" />
			<arg value="-buildfile" />
			<arg value="${base}/productBuild.xml" />
			<arg value="-DbaseLocation=${e360TP}" />
			<arg value="-Dconfigs=win32, win32, x86" />
			<classpath>
				<pathelement location="${eclipse360}/plugins/org.eclipse.equinox.launcher_1.1.0.v20100507.jar" />
			</classpath>
		</java>
	</target>

	<!--
	Headless Eclipse Build for Linux
	-->
	<target name="pdeBuildLin">
		<java classname="org.eclipse.equinox.launcher.Main" fork="true" failonerror="true">			
			<arg value="-application" />
			<arg value="org.eclipse.ant.core.antRunner" />
			<arg value="-buildfile" />
			<arg value="${base}/productBuild.xml" />
			<arg value="-DbaseLocation=${e360TP}" />
			<arg value="-Dconfigs=linux, gtk, x86" />
			<classpath>
				<pathelement location="${eclipse360}/plugins/org.eclipse.equinox.launcher_1.1.0.v20100507.jar" />
			</classpath>
		</java>
	</target>

	<!--
		Copy plugincustomization to linux product
	-->
	<target name="updateConfigLin"><!-- depends="checkBuildFilePresent" if="buildfile.present">-->
		<mkdir dir="${workspaceLocation}build/initmp/${archivePrefix}" />
		<copy todir="${workspaceLocation}build/initmp/${archivePrefix}">
			<fileset file="${workspaceLocation}products/DESY/products/org.csstudio.desy.controlroom.product/plugin_customization.ini"/>
		</copy>
		<zip destfile="${workspaceLocation}build/${buildLabel}/${buildId}-linux.gtk.x86.zip" basedir="${workspaceLocation}build/initmp" update="true" />
	</target>

	<!--
		Copy plugincustomization to windows product
	-->
	<target name="updateConfigWin"><!-- depends="checkBuildFilePresent" if="buildfile.present">-->
		<mkdir dir="${workspaceLocation}build/initmp/${archivePrefix}" />
		<copy todir="${workspaceLocation}build/initmp/${archivePrefix}">
			<fileset file="${workspaceLocation}products/DESY/products/org.csstudio.desy.controlroom.product/plugin_customization.ini"/>
		</copy>
		<zip destfile="${workspaceLocation}build/${buildLabel}/${buildId}-win32.win32.x86.zip" basedir="${workspaceLocation}build/initmp" update="true" />
	</target>

	<!--
		Copy linux product to artifact folder from hudson
	-->
	<target name="hudsonUpdateLin">
		<copy file="${workspaceLocation}build/${buildLabel}/${buildId}-linux.gtk.x86.zip" todir="${hudsonbase}/home/jobs/${hudsonjob}/workspace/artefacts"/>
	</target>

	<!--
		Copy linux product to artifact folder from hudson
	-->
	<target name="hudsonUpdateWin">
		<copy file="${workspaceLocation}build/${buildLabel}/${buildId}-win32.win32.x86.zip" todir="${hudsonbase}/home/jobs/${hudsonjob}/workspace/artefacts"/>
	</target>
</project>